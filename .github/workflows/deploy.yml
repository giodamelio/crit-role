name: Deploy

on:
  push:
    branches: [ master ]

env:
  GCP_PROJECT_ID: crit-role
  GCP_REGION: us-west1
  DOCKER_IMAGE_NAME: gcr.io/crit-role/main:${{ github.sha }}

jobs:
  build-image:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout sourcecode
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install All Dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Transpile Typescript
      run: npm run build

    - name: Setup gcloud cli with credentials
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: 'latest'
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Build docker image
      run: docker build -t $DOCKER_IMAGE_NAME .

    - name: Auth Docker with GCP
      run: gcloud auth configure-docker

    - name: Push image
      run: docker push $DOCKER_IMAGE_NAME

  deploy:
    runs-on: ubuntu-latest

    needs: build-image

    env:
      SERVICE_NAME: main

    steps:
      - name: Setup gcloud cli with credentials
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: 'latest'
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Deploy to GCP Cloud Run
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --image "$DOCKER_IMAGE_NAME" \
            --region "$GCP_REGION" \
            --platform "managed" \
            --allow-unauthenticated
